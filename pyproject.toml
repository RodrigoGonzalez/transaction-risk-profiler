[tool.poetry]
name = "transaction-risk-profiler"
version = "0.1.0"
description = "Use NLP to identify potentially fraudulent e-commerce financial transactions for additional review."
authors = ["Rodrigo Gonzalez <r@rodrigo-gonzalez.com>"]
license = "MIT"
readme = "README.md"

packages = [
    {include = "transaction_risk_profiler", from = "src"}
]
include = ["README.md", "LICENSE", "CHANGELOG.md"]

[tool.poetry.dependencies]
python = "^3.11"
flask = "^2.3.3"
pymongo = "^4.5.0"
requests = "^2.31.0"
bs4 = "^0.0.1"
scikit-learn = "^1.3.0"
pandas = "^2.0.3"
numpy = "^1.25.2"
flask-restful = "^0.3.10"
apscheduler = "^3.10.4"
simplejson = "^3.19.1"
tornado = "^6.3.3"
unicode = "^2.9"

[tool.poetry.group.dev.dependencies]
ipython = "^8.14.0"
commitizen = "^3.6.0"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.3.3"
isort = "^5.12.0"
black = "^23.7.0"
autoflake = "^2.2.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"
tryceratops = "^2.3.2"
lxml = "^4.9.3"
pycodestyle = "^2.11.0"
pylama = "^8.4.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-asyncio = "^0.21.1"
pytest-randomly = "^3.15.0"
pytest-check = "^2.2.1"
pytest-faker = "^2.0.0"
coverage = "^7.3.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.2"
mkdocs-material = "^9.2.3"
mkdocstrings = "^0.22.0"


[tool.isort]
profile = "black"
skip_glob = ["docs"]
line_length = 100
multi_line_output = 4
force_single_line = true
src_paths = ["src", "tests", "scripts"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["transaction_risk_profiler"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
    /(
        \.git
      | \.mypy_cache
      | \.mypy_html_report
      | \.venv
      | _build
      | build
      | dist
      | docs
      | example_repos
    )/
'''

[tool.mypy]
# output
show_error_codes = true
show_column_numbers = true
show_error_context = true
show_traceback = true
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
# platform
python_version = "3.10"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# strictness
explicit_package_bases = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true
exclude = [
    "example_repos",
    "tests",
]

[tool.coverage.run]
plugins = ["covdefaults"]
#omit = [""]

[tool.tryceratops]
exclude = ["tests/*", "scripts/*"]
experimental = false
check_pickable = false

[tool.commitizen]
version = "0.1.0"
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
commit = true
tag = true
version_files = [
    "pyproject.toml:version",
    "src/transaction_risk_profiler/__init__.py:__version__",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
